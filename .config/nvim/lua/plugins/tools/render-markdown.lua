return {
	"MeanderingProgrammer/render-markdown.nvim",
	dependencies = { "nvim-treesitter/nvim-treesitter", "nvim-tree/nvim-web-devicons" },
	ft = "markdown",
	opts = {},
	config = function()
		require("render-markdown").setup({
			enabled = true,
			render_modes = { "n", "c", "t" },
			max_file_size = 10.0,
			debounce = 100,
			preset = "lazy",
			file_types = { "markdown" },
			patterns = {
				markdown = {
					disable = true,
					directives = {
						{ id = 17, name = "conceal_lines" },
						{ id = 18, name = "conceal_lines" },
					},
				},
			},
			padding = { highlight = "Normal" },
			latex = {
				enabled = false,
				render_modes = false,
				converter = "latex2text",
				highlight = "RenderMarkdownMath",
				position = "above",
				top_pad = 0,
				bottom_pad = 0,
			},
			completions = {
				blink = { enabled = true },
				lsp = { enabled = true },
			},
			heading = {
				enabled = true,
				atx = true,
				setext = true,
				sign = true,
				icons = { "󰲡 ", "󰲣 ", "󰲥 ", "󰲧 ", "󰲩 ", "󰲫 " },
				position = "overlay",
				signs = { "󰫎 " },
				width = "full",
				left_margin = 0,
				left_pad = 0,
				right_pad = 0,
				min_width = 0,
				border = false,
				border_virtual = false,
				border_prefix = false,
				above = "▄",
				below = "▀",
				backgrounds = {
					"RenderMarkdownH1Bg",
					"RenderMarkdownH2Bg",
					"RenderMarkdownH3Bg",
					"RenderMarkdownH4Bg",
					"RenderMarkdownH5Bg",
					"RenderMarkdownH6Bg",
				},
				foregrounds = {
					"RenderMarkdownH1",
					"RenderMarkdownH2",
					"RenderMarkdownH3",
					"RenderMarkdownH4",
					"RenderMarkdownH5",
					"RenderMarkdownH6",
				},
				custom = {},
			},
			paragraph = {
				enabled = true,
				render_modes = false,
				left_margin = 0,
				indent = 0,
				min_width = 0,
			},
			code = {
				enabled = true,
				render_modes = false,
				sign = true,
				style = "full",
				position = "left",
				language_pad = 0,
				language_icon = true,
				language_name = true,
				disable_background = { "diff" },
				width = "full",
				left_margin = 0,
				left_pad = 0,
				right_pad = 0,
				min_width = 0,
				border = "hide",
				above = "▄",
				below = "▀",
				inline_left = "",
				inline_right = "",
				inline_pad = 0,
				highlight = "RenderMarkdownCode",
				highlight_language = nil,
				highlight_border = "RenderMarkdownCodeBorder",
				highlight_fallback = "RenderMarkdownCodeFallback",
				highlight_inline = "RenderMarkdownCodeInline",
			},
			dash = {
				enabled = true,
				render_modes = false,
				icon = "─",
				width = "full",
				left_margin = 0,
				highlight = "RenderMarkdownDash",
			},
			document = {
				enabled = true,
				render_modes = false,
				conceal = {
					char_patterns = {},
					line_patterns = {},
				},
			},
			bullet = {
				enabled = true,
				render_modes = false,
				icons = { "●", "○", "◆", "◇" },
				ordered_icons = function(ctx)
					local value = vim.trim(ctx.value)
					local index = tonumber(value:sub(1, #value - 1))
					return ("%d."):format(index > 1 and index or ctx.index)
				end,
				left_pad = 0,
				right_pad = 0,
				highlight = "RenderMarkdownBullet",
				scope_highlight = {},
			},
			checkbox = {
				enabled = true,
				render_modes = false,
				bullet = false,
				right_pad = 1,
				unchecked = {
					icon = "󰄱 ",
					highlight = "RenderMarkdownUnchecked",
					scope_highlight = nil,
				},
				checked = {
					icon = "󰱒 ",
					highlight = "RenderMarkdownChecked",
					scope_highlight = nil,
				},
				custom = {
					todo = {
						raw = "[-]",
						rendered = "󰥔 ",
						highlight = "RenderMarkdownTodo",
						scope_highlight = nil,
					},
				},
			},
			quote = {
				enabled = true,
				render_modes = false,
				icon = "▋",
				repeat_linebreak = false,
				highlight = {
					"RenderMarkdownQuote1",
					"RenderMarkdownQuote2",
					"RenderMarkdownQuote3",
					"RenderMarkdownQuote4",
					"RenderMarkdownQuote5",
					"RenderMarkdownQuote6",
				},
			},
			pipe_table = {
				enabled = true,
				render_modes = false,
				preset = "none",
				style = "full",
				cell = "padded",
				padding = 1,
				min_width = 0,
				border = {
					"┌",
					"┬",
					"┐",
					"├",
					"┼",
					"┤",
					"└",
					"┴",
					"┘",
					"│",
					"─",
				},
				border_virtual = false,
				alignment_indicator = "━",
				head = "RenderMarkdownTableHead",
				row = "RenderMarkdownTableRow",
				filler = "RenderMarkdownTableFill",
			},
			indent = {
				enabled = true,
				render_modes = false,
				per_level = 2,
				skip_level = 1,
				skip_heading = false,
				icon = "",
				highlight = "RenderMarkdownIndent",
			},
		})
	end,
}
